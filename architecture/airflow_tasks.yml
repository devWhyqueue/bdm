services:
  finazon_stream_ingestion:
    image: finazon_stream_ingestion
    build:
      context: ../bdm/ingestion/streaming/finazon
      dockerfile: Dockerfile
    container_name: finazon_stream_ingestion
    command: [ "python", "websocket_client.py", "--price-ticks-topic", "btc_usdt_price_ticks", "--stream-topic", "btc_usdt_volume_stream", "--tickers", "BTC/USDT", "--dataset", "crypto" ]
    environment:
      - KAFKA_ENDPOINT=kafka:9092
      - FINAZON_API_KEY=${FINAZON_API_KEY}
    depends_on:
      - kafka
      - kafka-ui
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  finazon-stream-processor:
    build:
      context: ../bdm/analytics/finazon
      dockerfile: Dockerfile
    container_name: finazon-stream-processor
    environment:
      - PRICE_TICKS_TOPIC=btc_usdt_price_ticks
      - STREAM_TOPIC=btc_usdt_volume_stream
      - KAFKA_ENDPOINT=kafka:9092
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086
      - INFLUXDB_BUCKET=exploitation_zone_streaming_data
      - INFLUXDB_ORG=bdm
      - INFLUXDB_TOKEN=admintoken
    depends_on:
      - jobmanager
      - taskmanager
      - kafka
      - kafka-ui
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  reddit_bitcoin_ingestion:
    image: subreddit-scraper
    build:
      context: ../bdm
      dockerfile: ingestion/batch/reddit/Dockerfile
    container_name: reddit_bitcoin_scraper
    command: [ "--help" ]

  finnhub_bitcoin_news:
    image: finnhub-news-scraper
    build:
      context: ../bdm
      dockerfile: ingestion/batch/finnhub/Dockerfile
    container_name: finnhub_bitcoin_news_scraper
    command: [ "python", "news_scraper.py", "--help" ]

  reddit_data_processor:
    image: reddit-data-processor
    build:
      context: ..
      dockerfile: bdm/processing/reddit/Dockerfile
    container_name: reddit_data_processor
    command: [ "--help" ]

  finnhub_data_processor:
    container_name: finnhub_data_processor
    build:
      context: ..
      dockerfile: bdm/processing/finnhub/Dockerfile
    image: finnhub-data-processor
    depends_on:
      - minio

  # ──────────────────────────────────────────────────────────────────────
  # Analytics Pipelines
  # ──────────────────────────────────────────────────────────────────────
  finnhub-analytics-pipeline:
    image: finnhub-analytics-pipeline
    build:
      context: ..
      dockerfile: bdm/analytics/finnhub/Dockerfile
    container_name: finnhub-analytics-pipeline
    command: [ "--help" ]
    environment:
      # PostgreSQL Connection Details for the Spark Application
      POSTGRES_HOST: postgres # Service name of the postgres container in this docker-compose
      POSTGRES_PORT: "5432" # Ensure it's a string if any component is sensitive
      POSTGRES_ANALYTICS_DB: ${POSTGRES_ANALYTICS_DB:-analytics_db}
      POSTGRES_ANALYTICS_USER: ${POSTGRES_ANALYTICS_USER:-analytics_user}
      POSTGRES_ANALYTICS_PASSWORD: ${POSTGRES_ANALYTICS_PASSWORD:-analytics_password}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      iceberg-init-runner:
        condition: service_completed_successfully
