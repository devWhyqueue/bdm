# Common dependencies for Airflow containers
x-airflow-common-depends-on: &airflow-common-depends-on
  redis:
    condition: service_healthy
  postgres:
    condition: service_healthy
  minio:
    condition: service_healthy

# Common dependencies for the "init" services
x-airflow-init-depends-on: &airflow-init-depends-on
  postgres:
    condition: service_healthy
  minio:
    condition: service_healthy
  kafka:
    condition: service_healthy

services:

  # ----------------------------------------------------------------------
  # Database services
  # ----------------------------------------------------------------------
  postgres:
    extends:
      file: ./architecture/database.yml
      service: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./bdm/analytics/postgres/initdb.d/:/docker-entrypoint-initdb.d/

  redis:
    extends:
      file: ./architecture/database.yml
      service: redis

  mongodb:
    extends:
      file: ./architecture/database.yml
      service: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  influxdb:
    extends:
      file: ./architecture/database.yml
      service: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2

  # ----------------------------------------------------------------------
  # Airflow services
  # ----------------------------------------------------------------------
  airflow-webserver:
    extends:
      file: architecture/airflow.yml
      service: airflow-webserver
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init-db:
        condition: service_completed_successfully
      airflow-init-packages:
        condition: service_completed_successfully

  airflow-scheduler:
    extends:
      file: architecture/airflow.yml
      service: airflow-scheduler
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init-db:
        condition: service_completed_successfully
      airflow-init-packages:
        condition: service_completed_successfully

  airflow-init-db:
    extends:
      file: architecture/airflow.yml
      service: airflow-init-db
    depends_on:
      <<: *airflow-init-depends-on

  airflow-init-packages:
    extends:
      file: architecture/airflow.yml
      service: airflow-init-packages
    depends_on:
      <<: *airflow-init-depends-on

  airflow-worker:
    extends:
      file: architecture/airflow.yml
      service: airflow-worker
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init-db:
        condition: service_completed_successfully
      airflow-init-packages:
        condition: service_completed_successfully

  # ----------------------------------------------------------------------
  # Airflow task build services
  # ----------------------------------------------------------------------
  finazon_stream_ingestion:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: finazon_stream_ingestion

  finazon-stream-processor:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: finazon-stream-processor

  reddit_bitcoin_ingestion:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: reddit_bitcoin_ingestion

  finnhub_bitcoin_news:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: finnhub_bitcoin_news

  reddit_data_processor:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: reddit_data_processor

  finnhub_data_processor:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: finnhub_data_processor

  finnhub-analytics-pipeline:
    extends:
      file: ./architecture/airflow_tasks.yml
      service: finnhub-analytics-pipeline

  # ----------------------------------------------------------------------
  # Kafka services
  # ----------------------------------------------------------------------
  kafka:
    extends:
      file: ./architecture/kafka.yml
      service: kafka

  kafka-ui:
    extends:
      file: ./architecture/kafka.yml
      service: kafka-ui
    depends_on:
      - kafka

  # ----------------------------------------------------------------------
  # MinIO services
  # ----------------------------------------------------------------------
  minio:
    extends:
      file: ./architecture/minio.yml
      service: minio
    volumes:
      - minio-data:/data

  createbuckets:
    extends:
      file: ./architecture/minio.yml
      service: createbuckets
    depends_on:
      - minio

  # ----------------------------------------------------------------------
  # Flink services
  # ----------------------------------------------------------------------
  jobmanager:
    extends:
      file: ./architecture/flink.yml
      service: jobmanager
    depends_on:
      - kafka
      - minio

  taskmanager:
    extends:
      file: ./architecture/flink.yml
      service: taskmanager
    depends_on:
      - jobmanager
      - kafka
      - minio

  iceberg-init-runner:
    extends:
      file: ./architecture/iceberg.yml
      service: iceberg-init-runner
    depends_on:
      minio:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./architecture/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - airflow-webserver
      - kafka-ui
      - jobmanager

  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - influxdb
    volumes:
      - ./architecture/grafana/provisioning:/etc/grafana/provisioning
      - ./architecture/grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  postgres-db-volume:
  mongo-data:
  minio-data:
  flink-checkpoints:
  flink-usrlib:
  influxdb-data:
